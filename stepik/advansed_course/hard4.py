# https://stepik.org/lesson/416753/step/14?thread=solutions&unit=406261
# Подсписок — часть другого списка. Подсписок может содержать один элемент, несколько или даже ни одного.
# Например, [1], [2], [3] и [4] — подсписки списка [1, 2, 3, 4]. Список [2, 3] — подсписок списка [1, 2, 3, 4],
# но список [2, 4] не подсписок списка [1, 2, 3, 4], так как элементы
# 2 и 4 во втором списке не смежные (т. к. они разрываются элементом 3). Пустой список — подсписок любого списка.
#  Сам список — подсписок самого себя, то есть список [1, 2, 3, 4] подсписок списка [1, 2, 3, 4].
#
# На вход программе подается строка текста, содержащая символы. Из данной строки формируется список.
# Напишите программу, которая выводит список, содержащий все возможные подсписки списка, включая пустой список.
#
# Формат входных данных
# На вход программе подается строка текста, содержащая символы, отделенные символом пробела.
#
# Формат выходных данных
# Программа должна вывести указанный список, содержащий все возможные подсписки, включая пустой список
# в соответствии с примерами.
#
# Примечание. Порядок списков одинаковой длины должен соответствовать порядку их вхождения в основной список.
#
# Sample Input 1:
# a b
# Sample Output 1:
# [[], ['a'], ['b'], ['a', 'b']]
#
# Sample Input 2:
# a b v
# Sample Output 2:
# [[], ['a'], ['b'], ['v'], ['a', 'b'], ['b', 'v'], ['a', 'b', 'v']]

# мое решение
sym = input().split()
lst = [[]]
cnt = 1
while True:
    if lst[-1] == sym:
        break
    for i in range(0, len(sym)):
        if i + cnt <= len(sym):
            lst.append(sym[i:i + cnt])
        else:
            break
    cnt += 1

print(lst)

# решение препода
input_data = input().split()
# сохраняем сюда длину входного списка
n = len(input_data)

result = [[]]
for size in range(1, n + 1):
    # подсписок при проходе с захватом size элементов
    cur_seq = []
    for i in range(n - size + 1):
        cur_seq.append(input_data[i:i + size])

    result.extend(cur_seq)

print(result)


# От Кирилл Гребенюк - великий однострочник)
print([[]]+[l[j:i+j] for l in [input().split()] for i in range(1,len(l)+1) for j in range(len(l)-i+1)])